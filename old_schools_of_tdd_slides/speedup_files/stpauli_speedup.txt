describe('Diamond', () => {
  it('should print the A-diamond', () => {
    expect(diamond("A")).toEqual("A");
  });
});

const diamond = () => "A";


  it('should print the B-Diamond', () => {
    expect(diamond("B")).toEqual(
      ".A.\n" +
      "B.B\n" +      
      ".A."       
    );
  });


  it('should print the B-Diamond', () => {
    expect(diamond("B")).toEqual(
      ".A.\n" +
      "B.B\n" +      
      ".A."       
    );
  });


const diamond = (letter) => {
  switch(letter) {
    case "A": return "A";
    case "B": return [
      ".A.",
      "B.B",
      ".A." ].join("\n") ;
  }
}

  it('should print the C-Diamond', () => {
    expect(diamond("C")).toEqual(
    "..A..\n" +
    ".B.B.\n" +
    "C...C\n" +
    ".B.B.\n" +
    "..A.."   
    );
  });
  
  https://cyber-dojo.org/kata/edit/4S3gyK
  https://cyber-dojo.org/kata/edit/9rRWwa

